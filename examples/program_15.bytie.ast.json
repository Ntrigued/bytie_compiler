{
  "type": "Program",
  "body": [
    {
      "type": "ImportStmt",
      "names": [
        "print"
      ],
      "source": "Standard"
    },
    {
      "type": "ExprStmt",
      "expr": {
        "type": "Call",
        "func": {
          "type": "Ident",
          "name": "print"
        },
        "args": [
          {
            "type": "Literal",
            "value": "Integer max function demonstration",
            "literal_type": "Str"
          }
        ]
      }
    },
    {
      "type": "ExprStmt",
      "expr": {
        "type": "Call",
        "func": {
          "type": "Ident",
          "name": "print"
        },
        "args": [
          {
            "type": "Literal",
            "value": "This function returns the maximum of two integers",
            "literal_type": "Str"
          }
        ]
      }
    },
    {
      "type": "FuncDecl",
      "name": "imax",
      "params": [
        {
          "type": "FuncParam",
          "type_spec": {
            "__type__": "TypeSpec",
            "value": {
              "kind": "Integer",
              "args": []
            }
          },
          "name": "x"
        },
        {
          "type": "FuncParam",
          "type_spec": {
            "__type__": "TypeSpec",
            "value": {
              "kind": "Integer",
              "args": []
            }
          },
          "name": "y"
        }
      ],
      "return_type": {
        "__type__": "TypeSpec",
        "value": {
          "kind": "Integer",
          "args": []
        }
      },
      "body": {
        "type": "Block",
        "statements": [
          {
            "type": "IfStmt",
            "condition": {
              "type": "BinaryOp",
              "op": ">=",
              "left": {
                "type": "Ident",
                "name": "x"
              },
              "right": {
                "type": "Ident",
                "name": "y"
              }
            },
            "then_block": {
              "type": "Block",
              "statements": [
                {
                  "type": "ReturnStmt",
                  "value": {
                    "type": "Ident",
                    "name": "x"
                  }
                }
              ]
            },
            "else_block": {
              "type": "Block",
              "statements": [
                {
                  "type": "ReturnStmt",
                  "value": {
                    "type": "Ident",
                    "name": "y"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "ExprStmt",
      "expr": {
        "type": "Call",
        "func": {
          "type": "Ident",
          "name": "print"
        },
        "args": [
          {
            "type": "Literal",
            "value": "Testing imax function with different inputs...",
            "literal_type": "Str"
          }
        ]
      }
    },
    {
      "type": "ExprStmt",
      "expr": {
        "type": "Call",
        "func": {
          "type": "Ident",
          "name": "print"
        },
        "args": [
          {
            "type": "BinaryOp",
            "op": "+",
            "left": {
              "type": "Literal",
              "value": "imax(10, -3) = ",
              "literal_type": "Str"
            },
            "right": {
              "type": "Call",
              "func": {
                "type": "Ident",
                "name": "imax"
              },
              "args": [
                {
                  "type": "Literal",
                  "value": 10,
                  "literal_type": "Integer"
                },
                {
                  "type": "UnaryOp",
                  "op": "-",
                  "operand": {
                    "type": "Literal",
                    "value": 3,
                    "literal_type": "Integer"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "ExprStmt",
      "expr": {
        "type": "Call",
        "func": {
          "type": "Ident",
          "name": "print"
        },
        "args": [
          {
            "type": "BinaryOp",
            "op": "+",
            "left": {
              "type": "Literal",
              "value": "imax(5, 5) = ",
              "literal_type": "Str"
            },
            "right": {
              "type": "Call",
              "func": {
                "type": "Ident",
                "name": "imax"
              },
              "args": [
                {
                  "type": "Literal",
                  "value": 5,
                  "literal_type": "Integer"
                },
                {
                  "type": "Literal",
                  "value": 5,
                  "literal_type": "Integer"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "ExprStmt",
      "expr": {
        "type": "Call",
        "func": {
          "type": "Ident",
          "name": "print"
        },
        "args": [
          {
            "type": "BinaryOp",
            "op": "+",
            "left": {
              "type": "Literal",
              "value": "imax(-10, -5) = ",
              "literal_type": "Str"
            },
            "right": {
              "type": "Call",
              "func": {
                "type": "Ident",
                "name": "imax"
              },
              "args": [
                {
                  "type": "UnaryOp",
                  "op": "-",
                  "operand": {
                    "type": "Literal",
                    "value": 10,
                    "literal_type": "Integer"
                  }
                },
                {
                  "type": "UnaryOp",
                  "op": "-",
                  "operand": {
                    "type": "Literal",
                    "value": 5,
                    "literal_type": "Integer"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "ExprStmt",
      "expr": {
        "type": "Call",
        "func": {
          "type": "Ident",
          "name": "print"
        },
        "args": [
          {
            "type": "BinaryOp",
            "op": "+",
            "left": {
              "type": "Literal",
              "value": "imax(0, 100) = ",
              "literal_type": "Str"
            },
            "right": {
              "type": "Call",
              "func": {
                "type": "Ident",
                "name": "imax"
              },
              "args": [
                {
                  "type": "Literal",
                  "value": 0,
                  "literal_type": "Integer"
                },
                {
                  "type": "Literal",
                  "value": 100,
                  "literal_type": "Integer"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "ExprStmt",
      "expr": {
        "type": "Call",
        "func": {
          "type": "Ident",
          "name": "print"
        },
        "args": [
          {
            "type": "Literal",
            "value": "Max function demonstration completed.",
            "literal_type": "Str"
          }
        ]
      }
    }
  ]
}