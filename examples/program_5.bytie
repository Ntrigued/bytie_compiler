retrieve add from "program_4"; // import the add function from the program_4.bytie file
retrieve print from "program_4"; // As print is imported into the global scope of program_4 it is available to be imported through program_4

function bad_function() -> None {
  retrieve print from Standard; # this would throw an error if the function was invoked, because print is imported above.
}
function deconstructed_multiply(Integer a, Integer b) -> Integer {
    Integer b_is_negative  = 0;
    if(b < 0) { b_is_negative = 1; }

    Integer sum = 0;
    Integer abs_b = b;
    if(b < 0) { abs_b = -b; }
    
    while(abs_b > 0) {
        sum = sum + a;
        abs_b = abs_b - 1;  # Fix infinite loop
    }

    if(b_is_negative == 1) {
        sum = -1 * sum;
    }

    return sum;
}

function print_sum(Double a, Double b) -> None {
   Integer sum = add(a+0, b); // a + 0 needed to convert a to Integer,  a + 0.0 would keep it a Double;
   print("The sum is: " + sum);
}

# Demonstrate the functions
print("Testing deconstructed_multiply function...");
Integer result1 = deconstructed_multiply(3, 4);
print("deconstructed_multiply(3, 4) = " + result1);

Integer result2 = deconstructed_multiply(5, -2);
print("deconstructed_multiply(5, -2) = " + result2);

Integer result3 = deconstructed_multiply(0, 7);
print("deconstructed_multiply(0, 7) = " + result3);

print("Testing print_sum function...");
print_sum(3.5, 2.8);
print_sum(10.2, 5.7);